#! /usr/bin/env bash

########## config.fcst ##########
# Forecast specific

echo "BEGIN: config.fcst"

# Turn off waves if not used for this CDUMP
case ${WAVE_CDUMP} in
  both | "${CDUMP/enkf}" ) ;; # Don't change
  *) DO_WAVE="NO" ;; # Turn waves off
esac

# Source model specific information that is resolution dependent
string="--fv3 ${CASE}"
[[ "${DO_OCN}" == "YES" ]] && string="${string} --mom6 ${OCNRES}"
[[ "${DO_ICE}" == "YES" ]] && string="${string} --cice6 ${ICERES}"
[[ "${DO_WAVE}" == "YES" ]] && string="${string} --ww3 ${waveGRD// /;}"
[[ "${DO_AERO}" == "YES" ]] && string="${string} --gocart"
# We are counting on $string being multiple arguments
# shellcheck disable=SC2086
source "${EXPDIR}/config.ufs" ${string}


# Get task specific resources
source "${EXPDIR}/config.resources" fcst
export domains_stack_size="16000000"


if [[ "${DONST}" == "YES" ]]; then
    source "${EXPDIR}/config.nsst"
fi

export esmf_profile=".false."
export esmf_logkind="ESMF_LOGKIND_MULTI_ON_ERROR" #Options: ESMF_LOGKIND_MULTI_ON_ERROR, ESMF_LOGKIND_MULTI, ESMF_LOGKIND_NONE


#######################################################################

export FORECASTSH="${HOMEgfs}/scripts/exglobal_forecast.sh"
#export FORECASTSH="${HOMEgfs}/scripts/exglobal_forecast.py"  # Temp. while this is worked on
export FCSTEXECDIR="${HOMEgfs}/exec"
export FCSTEXEC="ufs_model.x"

#######################################################################
# Model configuration
export TYPE="nh"
export MONO="non-mono"
#JKHexport range_warn=".false."                  ## JKH 

# Use stratosphere h2o physics
export h2o_phys=".true."

# Options of stratosphere O3 physics reaction coefficients
export new_o3forc="YES"

export gwd_opt=2

# --GFS.v16 uGWD.v0, used for suite FV3_GFS_v16 and UFS p6 etc
# do_ugwp=T: use unified CGWD and OGWD, and turbulent orographic form drag (TOFD)
# do_ugwp=F: use unified CGWD but old OGWD, TOFD is not uded.
if (( gwd_opt == 1 )); then
    export knob_ugwp_version=0
    export do_ugwp=".false."
    export do_tofd=".false."
    launch_level=$(echo "${LEVS}/2.35" |bc)
    export launch_level
fi


# -- uGWD.v1, for suite FV3_GFS_v17 and FV3_GFS_v17p8b etc
if (( gwd_opt == 2 )); then

    #--used for UFS p7 and p8a
    #export  knob_ugwp_version=1
    #export  do_ugwp=".false."
    #export  do_tofd=".false."
    #export  do_ugwp_v0=".false."
    #export  do_ugwp_v1=".true."
    #export  do_ugwp_v0_orog_only=".false."
    #export  do_ugwp_v0_nst_only=".false."
    #export  do_gsl_drag_ls_bl=".true."
    #export  do_gsl_drag_ss=".true."
    #export  do_gsl_drag_tofd=".true."
    #export  do_ugwp_v1_orog_only=".false."

    #--used for UFS p8
    export knob_ugwp_version=1
    export do_ugwp=".false."
    export do_tofd=".false."
    export do_ugwp_v0=".false."
    export do_ugwp_v1=".true."
    export do_ugwp_v0_orog_only=".false."
    export do_ugwp_v0_nst_only=".false."
    export do_gsl_drag_ls_bl=".true."
    export do_gsl_drag_ss=".true."
    export do_gsl_drag_tofd=".true."
    export do_ugwp_v1_orog_only=".false."
    launch_level=$(echo "${LEVS}/2.35" |bc)
    export launch_level
    if [[ ${do_gsl_drag_ls_bl} == ".true." ]]; then
       export cdmbgwd=${cdmbgwd_gsl}
    fi
fi

# Sponge layer settings
export tau=0.
export rf_cutoff=10.
export d2_bg_k1=0.20
export d2_bg_k2=0.04
export dz_min=6
export n_sponge=42
if (( LEVS == 128 )) && [[ "${CDUMP}" =~ "gdas" ]]; then
   export tau=5.0
   export rf_cutoff=1.0e3
   export d2_bg_k1=0.20
   export d2_bg_k2=0.0
fi

# PBL/turbulence schemes
export hybedmf=".false."
if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_ugwpv1_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_ugwpv1_c3_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_c3_mynn" ]] ; then
   export satmedmf=".false."
   export isatmedmf=0
   export shal_cnv=".false."
   export do_mynnedmf=".true."
   export do_mynnsfclay=".false."
   export icloud_bl=1
   export bl_mynn_tkeadvect=".true."
   export bl_mynn_edmf=1
   export bl_mynn_edmf_mom=1
   export lcnorm=".true."                           ## JKH
else
   export satmedmf=".true."
   export isatmedmf=1
fi
tbf=""
if [[ "${satmedmf}" == ".true." ]]; then tbf="_satmedmf" ; fi

#Convection schemes
export progsigma=".true."
tbp=""
if [[ "${progsigma}" == ".true." ]]; then tbp="_progsigma" ; fi

# Radiation options
export IAER=1011    ; #spectral band mapping method for aerosol optical properties
export iovr_lw=3    ; #de-correlation length cloud overlap method (Barker, 2008)
export iovr_sw=3    ; #de-correlation length cloud overlap method (Barker, 2008)
export iovr=3       ; #de-correlation length cloud overlap method (Barker, 2008)
export icliq_sw=2   ; #cloud optical coeffs from AER's newer version v3.9-v4.0 for hu and stamnes
export isubc_sw=2
export isubc_lw=2

# RRTMGP radiation scheme
export do_RRTMGP=.false.
export doGP_cldoptics_LUT=.false.
export doGP_lwscat=.false.

# LSM configuration
# NoahMP only
export iopt_sfc="3"
export iopt_trs="2"

# Convection Options: 2-SASAS, 3-GF
export progsigma=".true."
if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_c3_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_ugwpv1_c3_mynn" ]] ; then
    export imfdeepcnv=5
    export imfshalcnv=-1                 ## JKH - no shallow GF
elif [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_ugwpv1_c3" ]] ; then 
    export imfdeepcnv=5
    export imfshalcnv=5              
elif [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_c3" ]] ; then 
    export progsigma=.false.
    export imfdeepcnv=5
    export imfshalcnv=5              
elif [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf" ]] ; then 
    export imfdeepcnv=3
    export imfshalcnv=3              
else
    export imfdeepcnv=2
    if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_ugwpv1_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" ]] ; then
      export imfshalcnv=-1
    else
      export imfshalcnv=2
    fi
fi

#Convection schemes      ### JKH  - affects field table name
tbp=""
if [ "$progsigma" = ".true." ]; then tbp="_progsigma" ; fi


# Microphysics configuration
export dnats=0
export cal_pre=".true."
export do_sat_adj=".false."
export random_clds=".true."

case ${imp_physics} in
    99) # ZhaoCarr
        export ncld=1
        export FIELD_TABLE="${HOMEgfs}/parm/ufs/fv3/field_table_zhaocarr${tbf}${tbp}"
        export nwat=2
        ;;
    6)  # WSM6
        export ncld=2
        export FIELD_TABLE="${HOMEgfs}/parm/ufs/fv3/field_table_wsm6${tbf}${tbp}"
        export nwat=6
        ;;
    8)  # Thompson
        export ncld=2
        export nwat=6

        export cal_pre=".false."
        export random_clds=".false."
        export effr_in=".true."
        export lradar=".true."
        export ttendlim="-999"
        export sedi_semi=.true.
        export decfl=10

        if [[ "${CCPP_SUITE}" == "FV3_GFS_v17_p8_ugwpv1_mynn" || "${CCPP_SUITE}" == "FV3_GFS_v17_p8_ugwpv1_c3_mynn" || "${CCPP_SUITE}" == "FV3_GFS_v17_p8_mynn" || "${CCPP_SUITE}" == "FV3_GFS_v17_p8_c3_mynn" || 
              "${CCPP_SUITE}" == "FV3_GFS_v17_p8_thompson" ]] ; then
          #JKH  set dt_inner to 50 if running aerosol-aware Thompson
          export dt_inner=50
          export ltaerosol=".true."
          export FIELD_TABLE="${HOMEgfs}/parm/ufs/fv3/field_table_thompson_aero_tke${tbp}"
        else
          export dt_inner=$((DELTIM/2))
          if [[ "${sedi_semi}" == .true. ]]; then export dt_inner=${DELTIM} ; fi
          export ltaerosol=".false."
          export FIELD_TABLE="${HOMEgfs}/parm/ufs/fv3/field_table_thompson_noaero_tke${tbp}"
        fi

        export hord_mt_nh_nonmono=5
        export hord_xx_nh_nonmono=5
        export vtdm4_nh_nonmono=0.02
        export nord=2
        export dddmp=0.1
        export d4_bg=0.12
        ;;
    11) # GFDL
        export ncld=5
        export FIELD_TABLE="${HOMEgfs}/parm/ufs/fv3/field_table_gfdl${tbf}${tbp}"
        export nwat=6
        export dnats=1
        export cal_pre=".false."
        export do_sat_adj=".true."
        export random_clds=".false."
        export lgfdlmprad=".true."
        export effr_in=".true."
        export reiflag=2

        export hord_mt_nh_nonmono=5
        export hord_xx_nh_nonmono=5
        export vtdm4_nh_nonmono=0.02
        export nord=2
        export d4_bg=0.12
        export dddmp=0.1
        ;;
    *) echo "Unknown microphysics option, ABORT!" ;;
esac

# Stochastic physics
export DO_SPPT=${DO_SPPT:-"NO"}
export DO_SKEB=${DO_SKEB:-"NO"}
export DO_SHUM=${DO_SHUM:-"NO"}
export DO_LAND_PERT=${DO_LAND_PERT:-"NO"}
export DO_CA=${DO_CA:-"YES"}

#coupling settings
export cplmode="ufs.frac"
if [[ "${FRAC_GRID:-".true."}" == ".false." ]]; then
  export cplmode="ufs.nfrac"
fi
export psm_bc="1"

export min_lakeice="0.15"
export min_seaice=${min_seaice:-"0.15"}
export use_cice_alb=${use_cice_alb:-".false."}

export FSICL="0"
export FSICS="0"

#---------------------------------------------------------------------

# ideflate: netcdf zlib lossless compression (0-9): 0 no compression
# nbits: netcdf lossy compression level (0-32): 0 lossless
export ideflate=1
export nbits=14
export ishuffle=0
# compression for RESTART files written by FMS
export shuffle=1
export deflate_level=1

#---------------------------------------------------------------------
# Disable the use of coupler.res; get model start time from model_configure
export USE_COUPLER_RES="NO"

if [[ "${CDUMP}" =~ "gdas" ]] ; then # GDAS cycle specific parameters

    # Variables used in DA cycling
    export DIAG_TABLE="${HOMEgfs}/parm/ufs/fv3/diag_table_da"

    if [[ "${DOIAU}" == "YES" ]]; then
      export restart_interval="3"
    else
      export restart_interval="6"
    fi

    # Turn on dry mass adjustment in GDAS
    export adjust_dry_mass=".true."

elif [[ "${CDUMP}" =~ "gfs" ]] ; then # GFS cycle specific parameters

    # Write more variables to output
    export DIAG_TABLE="${HOMEgfs}/parm/ufs/fv3/diag_table"

    # Write gfs restart files to rerun fcst from any break point
    export restart_interval=${restart_interval_gfs:-12}

    # Turn off dry mass adjustment in GFS
    export adjust_dry_mass=".false."

    # Write each restart file in 16 small files to save time
    if [[ "${CASE}" = C768 ]]; then
      export io_layout="4,4"
    else
      export io_layout="1,1"
    fi

fi

# Remember config.efcs will over-ride these values for ensemble forecasts
# if these variables are re-defined there.
# Otherwise, the ensemble forecast will inherit from config.fcst

echo "END: config.fcst"
